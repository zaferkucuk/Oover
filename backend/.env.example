# ==============================================================================
# Django Configuration
# ==============================================================================

# Django Secret Key (CHANGE THIS IN PRODUCTION!)
# Generate a new key: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
DJANGO_SECRET_KEY=your-secret-key-here-change-this-in-production

# Debug Mode (set to False in production)
DEBUG=True

# Allowed Hosts (comma-separated list)
ALLOWED_HOSTS=localhost,127.0.0.1

# ==============================================================================
# Supabase Database Configuration
# ==============================================================================

# Database Name
DB_NAME=postgres

# Database User
DB_USER=postgres

# Database Password (REQUIRED - get from Supabase project settings)
# Location: Supabase Dashboard > Project Settings > Database > Password
DB_PASSWORD=your-supabase-database-password-here

# Database Host (Supabase endpoint)
# Location: Supabase Dashboard > Project Settings > Database > Host
DB_HOST=db.rmyxqqcozxbapyldeicm.supabase.co

# Database Port
DB_PORT=5432

# ==============================================================================
# Supabase API Configuration (Optional - for direct API calls)
# ==============================================================================

# Supabase Project URL
# Location: Supabase Dashboard > Project Settings > API > Project URL
SUPABASE_URL=https://rmyxqqcozxbapyldeicm.supabase.co

# Supabase Anon Key (Public Key)
# Location: Supabase Dashboard > Project Settings > API > Project API keys > anon public
SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Supabase Service Role Key (Secret Key - DO NOT EXPOSE TO FRONTEND!)
# Location: Supabase Dashboard > Project Settings > API > Project API keys > service_role secret
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# ==============================================================================
# External API Keys (Sport Data Providers)
# ==============================================================================

# Football-Data.org API (PRIMARY PROVIDER)
# Sign up: https://www.football-data.org/client/register
# Free tier: 10 requests/minute, covers 15-20 major European leagues
# Usage: Teams, matches, standings, player stats
FOOTBALL_DATA_API_KEY=your-football-data-api-key-here
FOOTBALL_DATA_BASE_URL=https://api.football-data.org/v4

# API-Football (FALLBACK PROVIDER)
# Sign up: https://rapidapi.com/api-sports/api/api-football
# Free tier: 100 requests/day, covers 280+ leagues worldwide
# Usage: Teams (minor leagues), detailed stats, live scores
API_FOOTBALL_KEY=your-api-football-key-here
API_FOOTBALL_BASE_URL=https://api-football-v1.p.rapidapi.com/v3
API_FOOTBALL_HOST=api-football-v1.p.rapidapi.com

# ==============================================================================
# API Integration Configuration
# ==============================================================================

# Rate Limiting (requests per time window)
# Football-Data.org
FOOTBALL_DATA_RATE_LIMIT_PER_MINUTE=10
FOOTBALL_DATA_RATE_LIMIT_PER_DAY=14400  # 10/min * 60 * 24

# API-Football
API_FOOTBALL_RATE_LIMIT_PER_MINUTE=100
API_FOOTBALL_RATE_LIMIT_PER_DAY=100

# Request Timeout (seconds)
API_REQUEST_TIMEOUT=30

# Retry Configuration
API_MAX_RETRIES=3
API_RETRY_BACKOFF_FACTOR=2  # Exponential backoff: 1s, 2s, 4s

# ==============================================================================
# Cache Configuration
# ==============================================================================

# Cache Backend (locmem, redis, memcached)
# - locmem: In-memory (development only, lost on restart)
# - redis: Redis server (production, persistent)
# - memcached: Memcached server (production, fast)
CACHE_BACKEND=locmem

# Redis Configuration (if using Redis cache)
CACHE_REDIS_URL=redis://localhost:6379/1
CACHE_REDIS_CLIENT_CLASS=django_redis.client.DefaultClient

# Cache TTL (Time To Live - in seconds)
CACHE_TTL_ONE_TIME=2592000  # 30 days - one-time fetched data (teams, leagues)
CACHE_TTL_PERIODIC=86400    # 1 day - periodically updated data (market values)
CACHE_TTL_SHORT=3600        # 1 hour - frequently changing data (match scores)

# Cache Key Prefix (prevents conflicts with other apps)
CACHE_KEY_PREFIX=oover_api

# ==============================================================================
# Celery Configuration (Optional - for async tasks)
# ==============================================================================

# Celery Broker URL (Redis)
CELERY_BROKER_URL=redis://localhost:6379/0

# Celery Result Backend (Redis)
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ==============================================================================
# Email Configuration (Optional - for notifications)
# ==============================================================================

# Email Backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP Settings
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-email-password-or-app-password

# ==============================================================================
# Monitoring & Error Tracking (Optional)
# ==============================================================================

# Sentry DSN (for error tracking)
SENTRY_DSN=your-sentry-dsn-here

# ==============================================================================
# Frontend Configuration
# ==============================================================================

# Frontend URL (for CORS)
FRONTEND_URL=http://localhost:3000

# ==============================================================================
# Security Settings (Production Only)
# ==============================================================================

# Set these to True in production
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# ==============================================================================
# Notes
# ==============================================================================

# 1. Copy this file to .env and fill in your actual values
# 2. NEVER commit .env to version control (it's in .gitignore)
# 3. Use strong, unique passwords for production
# 4. Rotate secrets regularly
# 5. Use different values for development, staging, and production
#
# API KEY BEST PRACTICES:
# - Football-Data.org: Best for major European leagues, very reliable
# - API-Football: Use as fallback for minor leagues or when rate limit is hit
# - Always respect rate limits to avoid being blocked
# - Cache aggressively to minimize API calls
# - Monitor API usage in your provider dashboards
